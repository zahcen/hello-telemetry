name: Docker Image CI

on:
  push:
    paths-ignore:
      - '.github/workflows/pipeline.yaml' 
    branches: [ "main" ]
  pull_request:
    paths-ignore:
      - '.github/workflows/pipeline.yaml'
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Git Checkout
      uses: actions/checkout@v4
    
    - name: Multiple Bash commands
      run: |
        echo "First command"
        ls -al
      
    - name: Maven Package
      run: |
        mvn clean package -DskipTests -f java-app/pom.xml
        echo "list files"
        ls -al
        ls -al /home/runner/work/hello-telemetry/hello-telemetry/tomcat/MyWebApp.war

    - name: Set up Docker Hub credentials
      run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build and push java-app Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/java-app:latest -f java-app/Dockerfile .
        docker push ${{ secrets.DOCKER_USERNAME }}/java-app:latest        

    # - name: Build Java App Docker Image
    #   id: buildAndPushTomcatImage
    #   uses: MaximilianoBz/dockerhub-buildpush@v1.0
    #   with:
    #     registry_url: 'docker.io'
    #     repository_name: 'hello-telemetry-tomcat-service'
    #     user_name: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_TOKEN }}
    #     image_version: 'latest'
    #     docker_file: 'java-app'
      
    - run: |
        ls -al
      
    # - name: Build Python Docker Image
    #   id: buildAndPushPythonImage
    #   uses: MaximilianoBz/dockerhub-buildpush@v1.0
    #   with:
    #     registry_url: 'docker.io'
    #     repository_name: 'hello-telemetry-python-service'
    #     user_name: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_TOKEN }}
    #     image_version: 'latest'
    #     docker_file: 'python-service'

        
    # - name: Setup kubectl
    #   uses: ThomasKliszowski/setup-kubectl@v1
    #   with:
    #      # Base64 encoded kube config
    #      kube-config: ${{ secrets.KUBECONFIG_B64 }}

    # - name: Apply tomcat Kubernetes manifests
    #   run: |
    #      kubectl version
    #      kubectl apply -f python-service/manifest/
    #      #kubectl rollout restart deploy ariba-simulator -n punchout
         
